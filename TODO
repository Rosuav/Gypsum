Suggestions in here may or may not ever end up being implemented. If you like the idea of one of these,
drop me a note, and I'll give it appropriate weight.

* OOCBox?
* There's some sort of resource leakage that results in slow-downs. See comments in window.pike in paint().
* Mark-and-copy of RTL text has some issues. May be v difficult (even impossible) to fully solve, but try to make
  it behave at least reasonably well most of the time.
* Mac support: can I put together a Homebrew recipe for Gypsum, which will pull in Pike?
* Support/acknowledge /etc/nsswitch.conf?? Or at least parse /etc/hosts, which is more cross-platform.

Eventually, drop support for Pike 7.8. This means:
1) Feel free to use new features like ->?
2) Drop COMPAT_SIGNAL and possibly other COMPAT features
3) Search the code for "7.8" and see what's commented
4) Unconditionally connect to the paste_clipboard signal in window.pike
Note that Pike 8.1 has been cut, and 8.0 declared to be the new stable, so this should be possible soon, Aslan-style.
Ideally, I want to see 8.0 in the primary Linux and Homebrew repositories, and only _then_ make the switch.

There are a few places around the code where magic happens. Ideally they should
become less magical... but for now, their documentation here will give them at
least some chance of being found.
* Creating timers (plugins/timer.pike) with names " HP", " SP", and ".EP" will handle them with Threshold RPG semantics.
* Creating a world (plugins/connect.pike) with an IP address of "0.0.0.0" or "::" will put it in passive mode (IPv4 or IPv6).
Note that Help|Tips (plugins/tips.pike) may be able to make things less obscure, but do not depend on this.

Vague theories of maybe-this-would-be-nice:
* Boss key (would require support from Pike - Lin/Win/Mac = three separate techniques, all hard)
  - Though this might be possible as a separately-runnable executable, which communicates with
    the main process via a pipe whose name is stored in persist[], and signals it; this could be
    then given two keystrokes in an OS-dependent way (one for hide, one for unhide).
  - Note that pipe creation is itself OS-dependent, so this may end up working with completely
    different code on each OS. :( Alternatively, this could be done with a TCP socket, but that
    seems a smidge like overkill, especially as it'll trip software firewall alarms. :(
  - This would have to be done as a non-default plugin, for safety.
  - VLC can do hotkeys on multiple different platforms, and may be a plausible imitation target.
    - After investigation, turns out, no help. VLC has a dedicated thread on win32 doing the exact
      same thing as I was doing in RosMud (RegisterHotKey and so on), and using xcb_grab_key for
      X11 platforms. So, unless I do it up as a C module for Pike, this is not going to work. And
      importing C into arbitrary Pike installations ain't gonna happen. :(
* 256 color support
* Negotiation/detection of Unicode/UTF-8 support? Figure out how servers go about detecting. Need
  to find at least one server that detects, before that can make sense.
* Lumina reported a strange issue whereby the input field was either black-on-black, or just not drawing. May be
  a font renderer or video driver issue. Windows 7. If ever seen elsewhere, look into. (Lumina also had issues
  with the charsheet plugin, which were quite probably the same problem remanifesting.)
